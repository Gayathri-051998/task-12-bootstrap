{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VTUser\\\\Downloads\\\\task-12-bootstrap\\\\src\\\\pages\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport API from '../utils/axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await API.post('/request-reset', {\n        email\n      });\n      toast.success(res.data.message);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      toast.error(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to send reset link');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control mb-2\",\n        placeholder: \"Email\",\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning\",\n        type: \"submit\",\n        children: \"Send Reset Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"qu4bovk5U4+JuhY7vxbmswqixrc=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","API","toast","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","handleSubmit","e","preventDefault","res","post","success","data","message","err","_err$response","_err$response$data","error","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/VTUser/Downloads/task-12-bootstrap/src/pages/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport API from '../utils/axios';\nimport { toast } from 'react-toastify';\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await API.post('/request-reset', { email });\n      toast.success(res.data.message);\n    } catch (err) {\n      toast.error(err.response?.data?.message || 'Failed to send reset link');\n    }\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h2>Forgot Password</h2>\n      <form onSubmit={handleSubmit}>\n        <input className=\"form-control mb-2\" placeholder=\"Email\" type=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\n        <button className=\"btn btn-warning\" type=\"submit\">Send Reset Link</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,gBAAgB;AAChC,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMX,GAAG,CAACY,IAAI,CAAC,gBAAgB,EAAE;QAAEN;MAAM,CAAC,CAAC;MACvDL,KAAK,CAACY,OAAO,CAACF,GAAG,CAACG,IAAI,CAACC,OAAO,CAAC;IACjC,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZjB,KAAK,CAACkB,KAAK,CAAC,EAAAF,aAAA,GAAAD,GAAG,CAACI,QAAQ,cAAAH,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcH,IAAI,cAAAI,kBAAA,uBAAlBA,kBAAA,CAAoBH,OAAO,KAAI,2BAA2B,CAAC;IACzE;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKkB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BnB,OAAA;MAAAmB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBvB,OAAA;MAAMwB,QAAQ,EAAEnB,YAAa;MAAAc,QAAA,gBAC3BnB,OAAA;QAAOkB,SAAS,EAAC,mBAAmB;QAACO,WAAW,EAAC,OAAO;QAACC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAExB,KAAM;QAACyB,QAAQ,EAAEtB,CAAC,IAAIF,QAAQ,CAACE,CAAC,CAACuB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/HvB,OAAA;QAAQkB,SAAS,EAAC,iBAAiB;QAACQ,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACrB,EAAA,CAtBID,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}