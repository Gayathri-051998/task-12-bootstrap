{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VTUser\\\\Downloads\\\\task-12-bootstrap\\\\src\\\\pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport API from '../utils/axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await API.post(`/auth/reset-password/${token}`, {\n        password\n      });\n      toast.success(res.data.message);\n      navigate('/login');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      toast.error(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error resetting password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control mb-3\",\n        placeholder: \"Enter new password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"ObF4f3zj+R2ilq8vJz6QIPahwZY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","API","toast","jsxDEV","_jsxDEV","ResetPassword","_s","token","navigate","password","setPassword","handleSubmit","e","preventDefault","res","post","success","data","message","err","_err$response","_err$response$data","error","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/VTUser/Downloads/task-12-bootstrap/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport API from '../utils/axios';\nimport { toast } from 'react-toastify';\n\nconst ResetPassword = () => {\n  const { token } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await API.post(`/auth/reset-password/${token}`, { password });\n      toast.success(res.data.message);\n      navigate('/login');\n    } catch (err) {\n      toast.error(err.response?.data?.message || 'Error resetting password');\n    }\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h2>Reset Password</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"password\"\n          className=\"form-control mb-3\"\n          placeholder=\"Enter new password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <button className=\"btn btn-primary\" type=\"submit\">\n          Reset Password\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,GAAG,MAAM,gBAAgB;AAChC,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAM,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC7B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMb,GAAG,CAACc,IAAI,CAAC,wBAAwBR,KAAK,EAAE,EAAE;QAAEE;MAAS,CAAC,CAAC;MACzEP,KAAK,CAACc,OAAO,CAACF,GAAG,CAACG,IAAI,CAACC,OAAO,CAAC;MAC/BV,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOW,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZnB,KAAK,CAACoB,KAAK,CAAC,EAAAF,aAAA,GAAAD,GAAG,CAACI,QAAQ,cAAAH,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcH,IAAI,cAAAI,kBAAA,uBAAlBA,kBAAA,CAAoBH,OAAO,KAAI,0BAA0B,CAAC;IACxE;EACF,CAAC;EAED,oBACEd,OAAA;IAAKoB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BrB,OAAA;MAAAqB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBzB,OAAA;MAAM0B,QAAQ,EAAEnB,YAAa;MAAAc,QAAA,gBAC3BrB,OAAA;QACE2B,IAAI,EAAC,UAAU;QACfP,SAAS,EAAC,mBAAmB;QAC7BQ,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAExB,QAAS;QAChByB,QAAQ,EAAGtB,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFzB,OAAA;QAAQoB,SAAS,EAAC,iBAAiB;QAACO,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAElD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACvB,EAAA,CAlCID,aAAa;EAAA,QACCN,SAAS,EACVC,WAAW;AAAA;AAAAqC,EAAA,GAFxBhC,aAAa;AAoCnB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}